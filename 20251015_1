using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _20251015_1
{
    class Program
    {
        /*
         * static 키워드
         * 글로벌 -> 전역 정적
         * 프로그램 로드와 동시에 생성 (선언) -> 프로그램 실행과 동시에 메모리에 할당된다
         */

        public static int age = 0;     //전역변수
        public string name = "고동원"; //멤버변수

        //메소드 제작하는 문법
        //접근제한자 | [어디서 사용/관리하는지] | 리턴되는자료형 or void(반환X) | 메소드이름 | (매개변수)
        private int Sum(int a, int b)// 멤버 메소드
        {
            int result = a + b;
            return result;//값을 메소드 밖으로 꺼내는 방법
        }

        public static int Minus(int a, int b)// 멤버 메소드
        {
            int result = a - b;
            return result;
        }

        static void Main(string[] args)
        {
            /*
             * 2차원 배열
             */

            //1차원 배열선언 정수형
                //int[] intarr_1 = new int[5];

                //for(int i = 0; i < intarr_1.Length; i++)
                //{
                //    Console.WriteLine(intarr_1[i]);
                //}

            //2차원 배열선언 정수형
                int[,] intarr_2 = new int[2, 5];

            //□ □ □ □ □
            //□ □ □ □ □

            //GetLength 메소드
            //Console.WriteLine(intarr_2.GetLength(0)); //2
            //Console.WriteLine(intarr_2.GetLength(1)); //5

            // for (int i = 0; i < intarr_2.GetLength(0); i++)
            // {
            //     for(int k = 0; k < intarr_2.GetLength(1); k++)
            //     {
            // 
            //     }
            // }
            // 
            // Console.WriteLine(age);
            // B.Main_B();//전역 메소드 불러오기
            // Console.WriteLine(age);
            // 
            // B classB = new B();
            // classB.Age_change(50);
            // Console.WriteLine(age);

            //클래스에서 관리하는 메소드
            Program prg = new Program();
            int sum = prg.Sum(3, 5);
            Console.WriteLine(sum); //같은 클래스면 private여도 가능하다

            //글로벌(static)에서 관리하는 메소드
            int minus = Minus(3, 5);
            Console.WriteLine(minus);

            //같은 곳에서 관리하면 바로 불러올 수 있다
        }
    }

    class B
    {
        public static void Main_B()
        {
            //전역변수는 어디 클래스(공간)에 있는지 알려만주면 다른 클래스에서 무한히 변경이 가능하다
            //남발하면 프로그램이 무거워지고 관리가 힘들다. 유지보수(추적)이 힘들다
            Program.age = 40;

            //멤버변수는 다른 클래스에서 멤버변수의 접근하려면 그 클래스(객체)를 생성해줘야한다
            //객체의 이름.변수이름으로 접근이 가능하다
            Program pro = new Program();
            pro.name = "송준엽";
            // pro.Sum - 접근제한자 private에 막힘
        }

        public void Age_change(int age)
        {
            Program.age = age;
        }
    }
}
